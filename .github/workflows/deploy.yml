name: CI/CD Pipeline for Rust App Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build, Test, and Deploy
    runs-on: ubuntu-latest

    env:
      INFISICAL_CLIENT_ID: ${{ secrets.INFISICAL_CLIENT_ID }}
      INFISICAL_CLIENT_SECRET: ${{ secrets.INFISICAL_CLIENT_SECRET }}
      INFISICAL_PROJECT_ID: ${{ secrets.INFISICAL_PROJECT_ID }}
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      DIGITALOCEAN_DROPLET_IP: ${{ secrets.DIGITALOCEAN_DROPLET_IP }}

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2

      - name: Set Up Rust Environment
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Infisical CLI
        run: |
          curl -L -o infisical.deb https://github.com/infisical/infisical/releases/download/infisical-cli/v0.28.4/infisical_0.28.4_linux_amd64.deb
          sudo dpkg -i infisical.deb
          sudo apt-get install -f
          infisical --version

      - name: Login to Infisical using Universal Auth
        id: infisical-login
        run: |
          INFISICAL_TOKEN=$(infisical login --method=universal-auth --client-id=$INFISICAL_CLIENT_ID --client-secret=$INFISICAL_CLIENT_SECRET --plain --silent)
          echo "INFISICAL_TOKEN=${INFISICAL_TOKEN}" >> $GITHUB_ENV

      - name: Fetch Secrets from Infisical
        run: |
          infisical run --env=prod --recursive --projectId=$INFISICAL_PROJECT_ID -- bash -c 'export DOCKER_HUB_USERNAME=${DOCKER_HUB_USERNAME}; export DOCKER_HUB_PASSWORD=${DOCKER_HUB_PASSWORD}; export DIGITALOCEAN_SSH_KEY=${DOCKER_HUB_SSH_KEY}; export DIGITALOCEAN_DROPLET_IP=${DIGITALOCEAN_DROPLET_IP};'

      - name: Build Docker Image
        run: docker build -t my-app:${{ github.sha }} .

      - name: Log in to Docker Hub
        run: echo "${DOCKER_HUB_PASSWORD}" | docker login -u "${DOCKER_HUB_USERNAME}" --password-stdin

      - name: Push Docker Image to Docker Hub
        run: docker push my-app:${{ github.sha }}

      - name: Deploy to DigitalOcean Droplet
        run: |
          ssh root@${DIGITALOCEAN_DROPLET_IP} <<EOF
            docker pull my-app:${{ github.sha }}
            docker stop my-app || true
            docker rm my-app || true
            docker run -d -p 3030:3030 --name my-app my-app:${{ github.sha }}
          EOF

      - name: Verify Deployment
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"input_string": "test"}' http://${DIGITALOCEAN_DROPLET_IP}:3030/reverse
