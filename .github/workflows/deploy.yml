name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Infisical CLI
        run: |
          curl -L -o infisical https://github.com/infisical/infisical/releases/download/infisical-cli/v0.28.4/infisical_0.28.4_linux_amd64.tar.gz
          tar -xzf infisical_0.28.4_linux_amd64.tar.gz
          chmod +x infisical
          sudo mv infisical /usr/local/bin/infisical

      - name: Login to Infisical
        run: |
          INFISICAL_TOKEN=$(infisical login --method=universal-auth --client-id=$INFISICAL_CLIENT_ID --client-secret=$INFISICAL_CLIENT_SECRET --plain --silent)
          echo "INFISICAL_TOKEN=${INFISICAL_TOKEN}" >> $GITHUB_ENV
        env:
          INFISICAL_CLIENT_ID: ${{ secrets.INFISICAL_CLIENT_ID }}
          INFISICAL_CLIENT_SECRET: ${{ secrets.INFISICAL_CLIENT_SECRET }}

      - name: Build Docker Image
        run: |
          docker build -t app:${{ github.sha }} .
        env:
          INFISICAL_TOKEN: ${{ env.INFISICAL_TOKEN }}

      - name: Log in to Docker Hub
        run: |
          echo "${DOCKER_HUB_PASSWORD}" | docker login -u "${DOCKER_HUB_USERNAME}" --password-stdin
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker push app:${{ github.sha }}
        env:
          INFISICAL_TOKEN: ${{ env.INFISICAL_TOKEN }}

      - name: Deploy to DigitalOcean Droplet
        run: |
          ssh root@${{ secrets.DIGITALOCEAN_DROPLET_IP }} << EOF
          docker pull app:${{ github.sha }}
          docker stop app || true
          docker rm app || true
          docker run -d -p 8080:8080 --name app app:${{ github.sha }}
          EOF
        env:
          INFISICAL_TOKEN: ${{ env.INFISICAL_TOKEN }}
