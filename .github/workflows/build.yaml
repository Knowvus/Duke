name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      service_name:
        description: 'Service name for the Docker image'
        required: true
        default: duke
      docker_username:
        description: 'Docker Hub username'
        required: true
      docker_password:
        description: 'Docker Hub password'
        required: true
      infisical_client_id:
        description: 'Infisical Client ID'
        required: true
      infisical_secret:
        description: 'Infisical Client Secret'
        required: true
      project_id:
        description: 'Infisical Project ID'
        required: true
      digital_ocean_token:
        description: 'Digital Ocean token'
        required: true
      host:
        description: 'Manager IP address'
        required: true
      password:
        description: 'Root password'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build and Push Docker Image
        uses: Knowvus/.github/actions/build-and-push@main
        with:
          service_name: ${{ github.event.inputs.service_name || 'duke' }}
          docker_username: ${{ secrets.DOCKER_HUB_USERNAME }}
          docker_password: ${{ secrets.DOCKER_HUB_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}

      - name: SSH into Droplet and Remove Existing docker-compose.yaml
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DO_DUKE_IP }}
          username: root
          password: ${{ secrets.DUKE_ROOT_PASSWORD }}
          script: |
            # Remove existing docker-compose.yaml if it exists
            echo "Checking for existing docker-compose.yaml..."
            if [ -f /root/deployment_directory/docker-compose.yaml ]; then
              echo "Removing existing docker-compose.yaml..."
              rm /root/deployment_directory/docker-compose.yaml
            fi

      - name: Transfer Docker Compose file to Droplet
        uses: appleboy/scp-action@v0.1.3
        with:
          source: ./docker-compose.yaml
          target: root@${{ secrets.DO_DUKE_IP }}:/root/deployment_directory/
          rm: true
          port: 22
          password: ${{ secrets.DUKE_ROOT_PASSWORD }}
          timeout: 30s
          command_timeout: 10m

      - name: SSH and Deploy on Droplet
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DO_DUKE_IP }}
          username: root
          password: ${{ secrets.DUKE_ROOT_PASSWORD }}
          script: |
            # Install Docker Compose if not installed
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            docker-compose version

            # Navigate to the directory containing docker-compose.yaml
            cd /root/deployment_directory

            # Initialize Docker Swarm
            echo "Initializing Docker Swarm..."
            docker swarm init --advertise-addr $DO_DUKE_IP || echo "Docker Swarm already initialized."

            # Deploy using Docker Compose
            echo "Deploying with Docker Compose..."
            docker-compose -f docker-compose.yaml pull
            docker-compose -f docker-compose.yaml up -d
